/**
 * Copyright 2010-2018 interactive instruments GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.interactive_instruments.etf.bsxm;

import java.io.IOException;

import org.basex.core.BaseXException;
import org.basex.core.Command;
import org.basex.core.MainOptions;
import org.basex.data.Data;
import org.basex.data.MetaData;
import org.basex.index.IndexType;
import org.basex.query.value.node.DBNode;

/**
 * Stores parsing methods of gml features. Parsed geometry is stored in fake
 * database objects.
 *
 * @author Christoph Spalek ( spalek aT interactive-instruments doT de )
 */
class FeatureParsingStore {

	private static int fakeNodeCounter = 0;
	private final String DB_BASE_NAME;

	public FeatureParsingStore(String dbBaseName) {
		this.DB_BASE_NAME = dbBaseName;
	}

	/**
	 * Parses gml features for a given TopoX Object. Xquery to generate the code
	 * from a database:
	 *
	 * for $feature in $db//*:AX_Flurstueck return( concat("t.nextFeature(id,
	 * node.create(""", $feature, """));"), "t.nextGeometricObject(id);", for
	 * $segment in $feature//*:LineStringSegment return concat("t.parseSegment(id,
	 * node.create(""", $segment/*:posList/text(), """), 2);") )
	 */
	public void parseFreeStandingSurfaceFail(TopoX t, int id) {

		FakeNode node = new FakeNode();
		t.nextFeature(id, node.create(
				"urn:adv:oid:DERPLP160000trK62018-01-31T19:52:54ZDLKM010403urn:rp:fdv:10201987/     -01urn:rp:fdv:10302018/00020744-NA408075.921 5480068.468 408055.320 5480057.372408055.320 5480057.372 408057.219 5480054.623408057.219 5480054.623 408075.191 5480028.724408075.191 5480028.724 408087.079 5480035.793408087.079 5480035.793 408091.934 5480038.680408091.934 5480038.680 408075.921 5480068.46807500142775075001000042770005__737.000false1987-01-0107312000"));
		t.nextGeometricObject(id);
		t.parseSegment(id, node.create("408075.921 5480068.468 408055.320 5480057.372"), 2);
		t.parseSegment(id, node.create("408055.320 5480057.372 408057.219 5480054.623"), 2);
		t.parseSegment(id, node.create("408057.219 5480054.623 408075.191 5480028.724"), 2);
		t.parseSegment(id, node.create("408075.191 5480028.724 408087.079 5480035.793"), 2);
		t.parseSegment(id, node.create("408087.079 5480035.793 408091.934 5480038.680"), 2);
		t.parseSegment(id, node.create("408091.934 5480038.680 408075.921 5480068.468"), 2);
		t.nextFeature(id, node.create(
				"urn:adv:oid:DERPLP160000trKa2010-08-04T08:14:27ZDLKM000000urn:rp:fdv:10201987/     -01408111.107 5480087.551 408093.528 5480077.768408093.528 5480077.768 408095.336 5480074.422 408098.292 5480068.954 408109.327 5480048.536408109.327 5480048.536 408117.664 5480053.105408117.664 5480053.105 408126.881 5480058.153408126.881 5480058.153 408125.591 5480060.562408125.591 5480060.562 408111.107 5480087.55107500142779075001000042770009__671.000false1987-01-0107312000"));
		t.nextGeometricObject(id);
		t.parseSegment(id, node.create("408111.107 5480087.551 408093.528 5480077.768"), 2);
		t.parseSegment(id,
				node.create(
						"408093.528 5480077.768 408095.336 5480074.422 408098.292 5480068.954 408109.327 5480048.536"),
				2);
		t.parseSegment(id, node.create("408109.327 5480048.536 408117.664 5480053.105"), 2);
		t.parseSegment(id, node.create("408117.664 5480053.105 408126.881 5480058.153"), 2);
		t.parseSegment(id, node.create("408126.881 5480058.153 408125.591 5480060.562"), 2);
		t.parseSegment(id, node.create("408125.591 5480060.562 408111.107 5480087.551"), 2);
		t.nextFeature(id, node.create(
				"urn:adv:oid:DERPLP160000tv6k2010-08-04T08:14:27ZDLKM000000urn:rp:fdv:10201978/00097-01408043.355 5480110.081 408030.600 5480103.264408030.600 5480103.264 408040.194 5480085.385 408040.787 5480084.279 408044.529 5480077.306 408049.422 5480068.187408049.422 5480068.187 408062.177 5480075.015408062.177 5480075.015 408043.355 5480110.081075001363148075001000036310048__577.000false1978-01-0107312000"));
		t.nextGeometricObject(id);
		t.parseSegment(id, node.create("408043.355 5480110.081 408030.600 5480103.264"), 2);
		t.parseSegment(id, node.create(
				"408030.600 5480103.264 408040.194 5480085.385 408040.787 5480084.279 408044.529 5480077.306 408049.422 5480068.187"),
				2);
		t.parseSegment(id, node.create("408049.422 5480068.187 408062.177 5480075.015"), 2);
		t.parseSegment(id, node.create("408062.177 5480075.015 408043.355 5480110.081"), 2);
	}

	public void parseDetectHolesPass(TopoX t, int id) {

		FakeNode node = new FakeNode();
		t.nextFeature(id, node.create(
				"urn:adv:oid:DERPLP160000C9bn2013-03-11T05:47:48ZDLKM010402urn:rp:fdv:10302012/51827-GE411140.266 5478396.183 411141.194 5478393.331411141.194 5478393.331 411147.983 5478372.458411147.983 5478372.458 411160.231 5478376.503411160.231 5478376.503 411161.275 5478376.848411161.275 5478376.848 411163.887 5478389.294411163.887 5478389.294 411161.043 5478389.473411161.043 5478389.473 411161.712 5478400.172411161.712 5478400.172 411158.852 5478401.434411158.852 5478401.434 411155.733 5478401.214411155.733 5478401.214 411140.266 5478396.183075001278089075001000027800089__462.000falsefalse2012-03-2107312000"));
		t.nextGeometricObject(id);
		t.parseSegment(id, node.create("411140.266 5478396.183 411141.194 5478393.331"), 2);
		t.parseSegment(id, node.create("411141.194 5478393.331 411147.983 5478372.458"), 2);
		t.parseSegment(id, node.create("411147.983 5478372.458 411160.231 5478376.503"), 2);
		t.parseSegment(id, node.create("411160.231 5478376.503 411161.275 5478376.848"), 2);
		t.parseSegment(id, node.create("411161.275 5478376.848 411163.887 5478389.294"), 2);
		t.parseSegment(id, node.create("411163.887 5478389.294 411161.043 5478389.473"), 2);
		t.parseSegment(id, node.create("411161.043 5478389.473 411161.712 5478400.172"), 2);
		t.parseSegment(id, node.create("411161.712 5478400.172 411158.852 5478401.434"), 2);
		t.parseSegment(id, node.create("411158.852 5478401.434 411155.733 5478401.214"), 2);
		t.parseSegment(id, node.create("411155.733 5478401.214 411140.266 5478396.183"), 2);
		t.nextFeature(id, node.create(
				"urn:adv:oid:DERPLP160000D33M2012-11-14T13:54:19ZDLKM010621urn:rp:fdv:10302012/02564-BV411167.271 5478411.274 411165.221 5478410.608411165.221 5478410.608 411163.887 5478389.294411163.887 5478389.294 411163.298 5478380.325411163.298 5478380.325 411161.275 5478376.848411161.275 5478376.848 411160.231 5478376.503411160.231 5478376.503 411168.528 5478367.421411168.528 5478367.421 411170.056 5478391.840411170.056 5478391.840 411170.538 5478399.534411170.538 5478399.534 411171.606 5478409.620411171.606 5478409.620 411171.919 5478412.786411171.919 5478412.786 411167.271 5478411.2740750012780116075001000027800116__259.000falsefalse2012-11-1407312000"));
		t.nextGeometricObject(id);
		t.parseSegment(id, node.create("411167.271 5478411.274 411165.221 5478410.608"), 2);
		t.parseSegment(id, node.create("411165.221 5478410.608 411163.887 5478389.294"), 2);
		t.parseSegment(id, node.create("411163.887 5478389.294 411163.298 5478380.325"), 2);
		t.parseSegment(id, node.create("411163.298 5478380.325 411161.275 5478376.848"), 2);
		t.parseSegment(id, node.create("411161.275 5478376.848 411160.231 5478376.503"), 2);
		t.parseSegment(id, node.create("411160.231 5478376.503 411168.528 5478367.421"), 2);
		t.parseSegment(id, node.create("411168.528 5478367.421 411170.056 5478391.840"), 2);
		t.parseSegment(id, node.create("411170.056 5478391.840 411170.538 5478399.534"), 2);
		t.parseSegment(id, node.create("411170.538 5478399.534 411171.606 5478409.620"), 2);
		t.parseSegment(id, node.create("411171.606 5478409.620 411171.919 5478412.786"), 2);
		t.parseSegment(id, node.create("411171.919 5478412.786 411167.271 5478411.274"), 2);
	}

	public void parseDetectHolesFail(TopoX t, int id) {

		FakeNode node = new FakeNode();
		t.nextFeature(id, node.create(
				"urn:adv:oid:DERPLP160000trFH2010-08-04T08:14:27ZDLKM000000urn:rp:fdv:10201979/00061-01407873.781 5479910.080 407870.633 5479907.611407870.633 5479907.611 407878.972 5479894.754 407882.276 5479889.660 407885.147 5479885.232 407886.866 5479882.581407886.866 5479882.581 407895.663 5479882.282407895.663 5479882.282 407898.362 5479882.381407898.362 5479882.381 407900.711 5479883.701407900.711 5479883.701 407902.190 5479885.940407902.190 5479885.940 407905.599 5479895.236407905.599 5479895.236 407908.898 5479902.933407908.898 5479902.933 407894.153 5479924.825407894.153 5479924.825 407890.465 5479922.156407890.465 5479922.156 407882.558 5479916.438407882.558 5479916.438 407873.781 5479910.08007500143162075001000043160002__968.000false1979-01-0107312000"));
		t.nextGeometricObject(id);
		t.parseSegment(id, node.create("407873.781 5479910.080 407870.633 5479907.611"), 2);
		t.parseSegment(id, node.create(
				"407870.633 5479907.611 407878.972 5479894.754 407882.276 5479889.660 407885.147 5479885.232 407886.866 5479882.581"),
				2);
		t.parseSegment(id, node.create("407886.866 5479882.581 407895.663 5479882.282"), 2);
		t.parseSegment(id, node.create("407895.663 5479882.282 407898.362 5479882.381"), 2);
		t.parseSegment(id, node.create("407898.362 5479882.381 407900.711 5479883.701"), 2);
		t.parseSegment(id, node.create("407900.711 5479883.701 407902.190 5479885.940"), 2);
		t.parseSegment(id, node.create("407902.190 5479885.940 407905.599 5479895.236"), 2);
		t.parseSegment(id, node.create("407905.599 5479895.236 407908.898 5479902.933"), 2);
		t.parseSegment(id, node.create("407908.898 5479902.933 407894.153 5479924.825"), 2);
		t.parseSegment(id, node.create("407894.153 5479924.825 407890.465 5479922.156"), 2);
		t.parseSegment(id, node.create("407890.465 5479922.156 407882.558 5479916.438"), 2);
		t.parseSegment(id, node.create("407882.558 5479916.438 407873.781 5479910.080"), 2);
		t.nextFeature(id, node.create(
				"urn:adv:oid:DERPLP160000trFK2010-08-04T08:14:27ZDLKM000000urn:rp:fdv:10201980/00033-01407897.392 5479927.164 407894.153 5479924.825407894.153 5479924.825 407908.898 5479902.933407908.898 5479902.933 407910.086 5479905.682407910.086 5479905.682 407915.684 5479915.578407915.684 5479915.578 407922.321 5479924.815407922.321 5479924.815 407929.938 5479933.261407929.938 5479933.261 407938.415 5479940.828407938.415 5479940.828 407930.058 5479953.733407930.058 5479953.733 407911.467 5479938.609407911.467 5479938.609 407897.392 5479927.16407500143163075001000043160003__874.000false1980-01-0107312000"));
		t.nextGeometricObject(id);
		t.parseSegment(id, node.create("407897.392 5479927.164 407894.153 5479924.825"), 2);
		t.parseSegment(id, node.create("407894.153 5479924.825 407908.898 5479902.933"), 2);
		t.parseSegment(id, node.create("407908.898 5479902.933 407910.086 5479905.682"), 2);
		t.parseSegment(id, node.create("407910.086 5479905.682 407915.684 5479915.578"), 2);
		t.parseSegment(id, node.create("407915.684 5479915.578 407922.321 5479924.815"), 2);
		t.parseSegment(id, node.create("407922.321 5479924.815 407929.938 5479933.261"), 2);
		t.parseSegment(id, node.create("407929.938 5479933.261 407938.415 5479940.828"), 2);
		t.parseSegment(id, node.create("407938.415 5479940.828 407930.058 5479953.733"), 2);
		t.parseSegment(id, node.create("407930.058 5479953.733 407911.467 5479938.609"), 2);
		t.parseSegment(id, node.create("407911.467 5479938.609 407897.392 5479927.164"), 2);
		t.nextFeature(id, node.create(
				"urn:adv:oid:DERPLP160000trLE2010-08-04T08:14:27ZDLKM000000urn:rp:fdv:10201987/     -01407878.810 5479962.890 407853.040 5479949.175407853.040 5479949.175 407854.849 5479945.776407854.849 5479945.776 407859.271 5479948.151407859.271 5479948.151 407864.305 5479950.854407864.305 5479950.854 407867.139 5479952.379407867.139 5479952.379 407872.852 5479955.453407872.852 5479955.453 407877.871 5479958.151407877.871 5479958.151 407880.529 5479959.581407880.529 5479959.581 407879.270 5479962.010407879.270 5479962.010 407878.810 5479962.89007500143024075001000043020004__111.000false1987-01-0107312000"));
		t.nextGeometricObject(id);
		t.parseSegment(id, node.create("407878.810 5479962.890 407853.040 5479949.175"), 2);
		t.parseSegment(id, node.create("407853.040 5479949.175 407854.849 5479945.776"), 2);
		t.parseSegment(id, node.create("407854.849 5479945.776 407859.271 5479948.151"), 2);
		t.parseSegment(id, node.create("407859.271 5479948.151 407864.305 5479950.854"), 2);
		t.parseSegment(id, node.create("407864.305 5479950.854 407867.139 5479952.379"), 2);
		t.parseSegment(id, node.create("407867.139 5479952.379 407872.852 5479955.453"), 2);
		t.parseSegment(id, node.create("407872.852 5479955.453 407877.871 5479958.151"), 2);
		t.parseSegment(id, node.create("407877.871 5479958.151 407880.529 5479959.581"), 2);
		t.parseSegment(id, node.create("407880.529 5479959.581 407879.270 5479962.010"), 2);
		t.parseSegment(id, node.create("407879.270 5479962.010 407878.810 5479962.890"), 2);
		t.nextFeature(id, node.create(
				"urn:adv:oid:DERPLP160000tw232018-01-31T19:52:54ZDLKM010403urn:rp:fdv:10201987/     -01urn:rp:fdv:10302018/00020744-NA407877.871 5479958.151 407872.852 5479955.453407872.852 5479955.453 407876.666 5479948.241407876.666 5479948.241 407878.413 5479944.938407878.413 5479944.938 407889.995 5479923.035407889.995 5479923.035 407890.465 5479922.156407890.465 5479922.156 407894.153 5479924.825407894.153 5479924.825 407897.392 5479927.164407897.392 5479927.164 407883.599 5479953.680407883.599 5479953.680 407883.104 5479954.631407883.104 5479954.631 407880.529 5479959.581407880.529 5479959.581 407877.871 5479958.15107500143025075001000043020005__320.000false1987-01-0107312000"));
		t.nextGeometricObject(id);
		t.parseSegment(id, node.create("407877.871 5479958.151 407872.852 5479955.453"), 2);
		t.parseSegment(id, node.create("407872.852 5479955.453 407876.666 5479948.241"), 2);
		t.parseSegment(id, node.create("407876.666 5479948.241 407878.413 5479944.938"), 2);
		t.parseSegment(id, node.create("407878.413 5479944.938 407889.995 5479923.035"), 2);
		t.parseSegment(id, node.create("407889.995 5479923.035 407890.465 5479922.156"), 2);
		t.parseSegment(id, node.create("407890.465 5479922.156 407894.153 5479924.825"), 2);
		t.parseSegment(id, node.create("407894.153 5479924.825 407897.392 5479927.164"), 2);
		t.parseSegment(id, node.create("407897.392 5479927.164 407883.599 5479953.680"), 2);
		t.parseSegment(id, node.create("407883.599 5479953.680 407883.104 5479954.631"), 2);
		t.parseSegment(id, node.create("407883.104 5479954.631 407880.529 5479959.581"), 2);
		t.parseSegment(id, node.create("407880.529 5479959.581 407877.871 5479958.151"), 2);
		t.nextFeature(id, node.create(
				"urn:adv:oid:DERPLP160000tw2f2018-01-31T19:52:54ZDLKM010403urn:rp:fdv:10201987/     -01urn:rp:fdv:10302018/00020744-NA407859.271 5479948.151 407854.849 5479945.776407854.849 5479945.776 407858.727 5479938.465407858.727 5479938.465 407859.600 5479936.818407859.600 5479936.818 407873.781 5479910.080407873.781 5479910.080 407882.558 5479916.438407882.558 5479916.438 407868.708 5479942.555407868.708 5479942.555 407867.492 5479944.847407867.492 5479944.847 407865.107 5479949.344407865.107 5479949.344 407864.305 5479950.854407864.305 5479950.854 407859.271 5479948.15107500143027075001000043020007__426.000false1987-01-0107312000"));
		t.nextGeometricObject(id);
		t.parseSegment(id, node.create("407859.271 5479948.151 407854.849 5479945.776"), 2);
		t.parseSegment(id, node.create("407854.849 5479945.776 407858.727 5479938.465"), 2);
		t.parseSegment(id, node.create("407858.727 5479938.465 407859.600 5479936.818"), 2);
		t.parseSegment(id, node.create("407859.600 5479936.818 407873.781 5479910.080"), 2);
		t.parseSegment(id, node.create("407873.781 5479910.080 407882.558 5479916.438"), 2);
		t.parseSegment(id, node.create("407882.558 5479916.438 407868.708 5479942.555"), 2);
		t.parseSegment(id, node.create("407868.708 5479942.555 407867.492 5479944.847"), 2);
		t.parseSegment(id, node.create("407867.492 5479944.847 407865.107 5479949.344"), 2);
		t.parseSegment(id, node.create("407865.107 5479949.344 407864.305 5479950.854"), 2);
		t.parseSegment(id, node.create("407864.305 5479950.854 407859.271 5479948.151"), 2);
	}

	public void parseSimpleFeature(TopoX t, int id) {

		FakeNode node = new FakeNode();
		t.nextFeature(id, node.create(
				"urn:adv:oid:DERPLP160000trFH2010-08-04T08:14:27ZDLKM000000urn:rp:fdv:10201979/00061-01407873.781 5479910.080 407870.633 5479907.611407870.633 5479907.611 407878.972 5479894.754 407882.276 5479889.660 407885.147 5479885.232 407886.866 5479882.581407886.866 5479882.581 407895.663 5479882.282407895.663 5479882.282 407898.362 5479882.381407898.362 5479882.381 407900.711 5479883.701407900.711 5479883.701 407902.190 5479885.940407902.190 5479885.940 407905.599 5479895.236407905.599 5479895.236 407908.898 5479902.933407908.898 5479902.933 407894.153 5479924.825407894.153 5479924.825 407890.465 5479922.156407890.465 5479922.156 407882.558 5479916.438407882.558 5479916.438 407873.781 5479910.08007500143162075001000043160002__968.000false1979-01-0107312000"));
		t.nextGeometricObject(id);
		t.parseSegment(id, node.create("407873.781 5479910.080 407870.633 5479907.611"), 2);
		t.parseSegment(id, node.create(
				"407870.633 5479907.611 407878.972 5479894.754 407882.276 5479889.660 407885.147 5479885.232 407886.866 5479882.581"),
				2);
		t.parseSegment(id, node.create("407886.866 5479882.581 407895.663 5479882.282"), 2);
		t.parseSegment(id, node.create("407895.663 5479882.282 407898.362 5479882.381"), 2);
		t.parseSegment(id, node.create("407898.362 5479882.381 407900.711 5479883.701"), 2);
		t.parseSegment(id, node.create("407900.711 5479883.701 407902.190 5479885.940"), 2);
		t.parseSegment(id, node.create("407902.190 5479885.940 407905.599 5479895.236"), 2);
		t.parseSegment(id, node.create("407905.599 5479895.236 407908.898 5479902.933"), 2);
		t.parseSegment(id, node.create("407908.898 5479902.933 407894.153 5479924.825"), 2);
		t.parseSegment(id, node.create("407894.153 5479924.825 407890.465 5479922.156"), 2);
		t.parseSegment(id, node.create("407890.465 5479922.156 407882.558 5479916.438"), 2);
		t.parseSegment(id, node.create("407882.558 5479916.438 407873.781 5479910.080"), 2);
	}

	public class FakeData extends Data {

		private String str;

		protected FakeData(String str) {
			super(new MetaData(DB_BASE_NAME, new MainOptions(), null));
			this.str = str;
		}

		@Override
		public void createIndex(IndexType type, Command cmd) throws IOException {}

		@Override
		public void dropIndex(IndexType type) throws BaseXException {}

		@Override
		public void startUpdate(MainOptions opts) throws BaseXException {}

		@Override
		public void finishUpdate(MainOptions opts) {}

		@Override
		public void flush(boolean all) {}

		@Override
		public byte[] text(int pre, boolean text) {
			return this.str.getBytes();
		}

		@Override
		public long textItr(int pre, boolean text) {
			return 0;
		}

		@Override
		public double textDbl(int pre, boolean text) {
			return 0;
		}

		@Override
		public int textLen(int pre, boolean text) {
			return 0;
		}

		@Override
		protected void updateText(int pre, byte[] value, int kind) {}

		@Override
		protected void delete(int pre, boolean text) {}

		@Override
		protected long textRef(byte[] value, boolean text) {
			return 0;
		}

		@Override
		public boolean inMemory() {
			return false;
		}
	}

	public class FakeNode extends DBNode {

		private int pre;

		public FakeNode(String str, int pre) {
			super(new FakeData(str), 0, 2);
			this.pre = pre;
		}

		public FakeNode() {
			super(null, 0, 2);
		}

		public FakeNode create(String str) {
			return new FakeNode(str, fakeNodeCounter++);
		}
	}

}
